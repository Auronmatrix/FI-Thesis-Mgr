@techreport{InternationalOrganizationOfStandardization2011,
abstract = {ISO/IEC/IEEE 42010:2011 addresses the creation, analysis and sustainment of architectures of systems through the use of architecture descriptions. A conceptual model of architecture description is established. The required contents of an architecture description are specified. Architecture viewpoints, architecture frameworks and architecture description languages are introduced for codifying conventions and common practices of architecture description. The required content of architecture viewpoints, architecture frameworks and architecture description languages is specified. Annexes provide the motivation and background for key concepts and terminology and examples of applying ISO/IEC/IEEE 42010:2011.},
author = {{International Organization Of Standardization}},
booktitle = {ISOIECIEEE 420102011E Revision of ISOIEC 420102007 and IEEE Std 14712000},
doi = {10.1109/IEEESTD.2011.6129467},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/International Organization Of Standardization - 2011 - ISOIECIEEE 420102011 - Systems and software engineering -- Architecture descripti.pdf:pdf},
institution = {International Organization for Standardization (ISO)},
mendeley-groups = {Masters},
number = {March},
pages = {1--46},
title = {{ISO/IEC/IEEE 42010:2011 - Systems and software engineering -- Architecture description}},
url = {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?tp=\&arnumber=6129467\&contentType=Standards\&sortType=asc\_p\_Sequence\&filter=AND(p\_Publication\_Number:6129465)},
volume = {2011},
year = {2011}
}

@inproceedings{Emery2009,
abstract = {The current draft revision of ISO/IEC 42010 (IEEE Std 1471) proposes a formalization of architecture framework within the ontology of the standard. This paper discusses the origin of the concept, motivates its standardization in ISO/IEC 42010, and argues that a well-defined architecture framework should be a key component of any architecture description. The paper describes the application of the proposed construct to several well-known architecture frameworks.},
author = {Emery, David and Hilliard, Rich},
booktitle = {2009 Joint Working IEEE/IFIP Conference on Software Architecture and European Conference on Software Architecture, WICSA/ECSA 2009},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Emery, Hilliard - 2009 - Every architecture description needs a framework Expressing architecture frameworks using ISOIEC 42010.pdf:pdf},
keywords = {Architecture description,Architecture framework,Architecture viewpoint,Model correspondence,Model correspondence rule,Standardization,architecture description,architecture frameworks,model cor-,model correspondence,standardization,viewpoint},
mendeley-groups = {Masters},
pages = {31--40},
title = {{Every architecture description needs a framework: Expressing architecture frameworks using ISO/IEC 42010}},
year = {2009}
}

@misc{42010faq,
keywords = {IEEE 1471,ISO/IEC/IEEE 42010,architecture description,architecture viewpoints,enterprise architecture,multiple views,software architecture,systemsarchitecture},
title = {{ISO/IEC/IEEE 42010: Frequently Asked Questions (FAQ)}},
url = {http://www.iso-architecture.org/ieee-1471/faq.html},
urldate = {2014-12-17}
}

@misc{Wiki4plus1,
title = {4+1 architectural view model},
url = {http://en.wikipedia.org/wiki/4+1\_architectural\_view\_model},
urldate = {2014-12-01}
}



@inproceedings{Woods2005,
abstract = {This short document reports the content and results of the "Architecture Description Languages in Practice" working group held on 9th and 10th November 2005 at the WICSA 5 conference, in Pittsburgh, Pennsylvania, USA.},
author = {Woods, Eoin and Hilliard, Rich},
booktitle = {Proceedings - 5th Working IEEE/IFIP Conference on Software Architecture, WICSA 2005},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Woods, Hilliard - 2005 - Architecture description languages in practice session report.pdf:pdf},
pages = {243--246},
title = {{Architecture description languages in practice session report}},
volume = {2005},
year = {2005}
}

@inproceedings{Luckham1996,
abstract = {This paper describes the RAPIDE concepts of system architecture, casual event simulation, and some of the tools for viewing and analysis of causal event simulations. Illustration of the language and tools is given by a detailed small example},
author = {Luckham, David C},
booktitle = {DIMACS Partial Order Methods Workshop IV},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Luckham - 1996 - Rapide A Language and Toolset for Simulation of Distributed Systems by Partial Ordering of Events.pdf:pdf},
keywords = {simulation,software architecture},
title = {{Rapide: A Language and Toolset for Simulation of Distributed Systems by Partial Ordering of Events}},
year = {1996}
}


@phdthesis{Allen1997,
abstract = {Chair-David Garlan},
author = {Allen, Robert J},
booktitle = {Architecture},
doi = {CMU-CS-97-144},
editor = {Lamb, D},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Allen - 1997 - A Formal Approach to Software Architecture.pdf:pdf},
number = {May},
pages = {1--7},
pmid = {6090593003945858192},
publisher = {Carnegie Mellon University},
school = {Carnegie Mellon University},
series = {Lecture Notes in Computer Science},
title = {{A Formal Approach to Software Architecture}},
type = {Doctoral Thesis},
url = {http://portal.acm.org/citation.cfm?id=926062 http://reports-archive.adm.cs.cmu.edu/anon/1997/CMU-CS-97-144.pdf},
volume = {28},
year = {1997}
}

@book{Fowler2004,
abstract = {Now widely adopted as the de facto industry standard and sanctioned by the Object Management Group, the Unified Modeling Language (UML) is a notation all software developers need to know and understand. However, the UML is a big language, and not all of it is equally important. The award-winning first edition of UML Distilled was widely praised for being a concise guide to the core parts of the UML and has proved extremely successful in helping developers get up and running quickly. UML Distilled, Second Edition, maintains the concise format with significantly updated coverage of use cases and activity diagrams, and expanded coverage of collaborations. It also includes a new appendix detailing the changes between UML versions.Written for those with a basic understanding of object-oriented analysis and design, this book begins with a summary of UML's history, development, and rationale and then moves into a discussion of how the UML can be integrated into the object-oriented development process. The primary author profiles the various modeling techniques in the UML--such as use cases, class diagrams, and interaction diagrams--and describes the notation and semantics clearly and succinctly. He also outlines useful non-UML techniques such as CRC cards and patterns. These descriptions are made even more relevant with a collection of best practices based on the primary author's experience and a brief Java programming example demonstrating the implementation of a UML-based design. With this tour of the key parts of the UML, readers will be left with a firm foundation upon which to build models and develop further knowledge of the Unified Modeling Language.Praise for the First Edition"UML Distilled is a recipient of the prestigious 1997 Software Development Magazine Productivity Award in the Books category. Addison-Wesley congratulates authors Martin Fowler and Kendall Scott for their outstanding work.""UML Distilled is well written, knowledgeable about both systems development and UML, and disarmingly honest." -- Robert L. Glass, The Software Practitioner (March 1998)"UML Distilled proves that you can say a lot of useful things about computing in a small book." -- Gregory V. Wilson, Dr. Dobb's Journal 020165783XB04062001},
author = {Fowler, Martin and Scott, Kendall},
booktitle = {Pearson Paravia Bruno Mondad},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Fowler, Scott - 2004 - UML Distilled A Brief Guide to the Standard Object Modeling Language.pdf:pdf},
isbn = {0201895358},
mendeley-groups = {Masters},
pages = {175},
pmid = {13268755},
publisher = {Addison-Wesley Professional},
title = {{UML Distilled: A Brief Guide to the Standard Object Modeling Language}},
url = {http://portal.acm.org/citation.cfm?id=327721},
year = {2004}
}


@phdthesis{bjorn,
abstract = {An Architecture Description Language (ADL) is a language designed to model a system. They have often graphical as well as plain text syntax. This paper starts with a brief description of ADLs, and then follows an overview of the popular ADLs on the market of today and conferences about ADLs. Finally, a connection to my own research is described.},
author = {Bj\"{o}rnander, Stefan},
booktitle = {mrtc.mdh.se},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Bj\"{o}rnander - Unknown - Architecture Description Languages.pdf:pdf},
school = {M\"{a}lardalen University},
title = {{Architecture Description Languages}},
url = {http://www.mrtc.mdh.se/~han/FoPlan/ass2-bjornander.pdf}
}

@article{Kruchten,
abstract = {This article presents a model for describing the architecture of software-intensive systems, based on the use of multiple, concurrent views. This use of multiple views allows to address separately the concerns of the various ‘stakeholders’ of the architecture: end-user, developers, systems engineers, project managers, etc., and to handle separately the functional and non functional requirements. Each of the five views is described, together with a notation to capture it. The views are designed using an architecture-centered, scenario- driven, iterative development process.},
author = {Kruchten, Philippe},
doi = {10.1145/216591.216611},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Kruchten - 1995 - Architectural Blueprints — The "4+1 " View Model of Software Architecture.pdf:pdf},
isbn = {0897917057},
issn = {07407459},
journal = {IEEE Software},
keywords = {object-oriented design,software architecture,software development process,view},
number = {November},
pages = {42--50},
pmid = {3651256673990163555},
title = {{Architectural blueprints - The "4+ 1" view model of software architecture}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:Architectural+Blueprints+?+The+?+4+++1+?+View+Model+of+Software+Architecture\#0},
volume = {12},
year = {1995}
}

@article{Muchandi2007,
author = {Muchandi, V},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Paper - Unknown - Applying 4 1 View Architecture with UML 2.pdf:pdf},
journal = {FCGSS White Paper},
title = {{Applying 4+ 1 view architecture with UML 2}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:Applying+4+++1+View+Architecture+with+UML+2\#5},
year = {2007}
}

@article{Krebs2012,
abstract = {Multi-tenant applications serve different customers with one application instance. This architectural style leverages sharing and economies of scale to provide cost efficient hosting. As multi-tenancy is a new concept, a common definition of the word and related concepts is not yet established and the architectural concerns are not fully understood. This paper provides an overview of important architectural concerns and there mutual influences. Beside that, it defines multi-tenancy and differentiates it from several related concepts.},
author = {Krebs, Rouven and Momm, Christof and Kounev, Samuel},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Krebs, Momm, Kounev - 2012 - Architectural Concerns in Multi-tenant SaaS Applications.pdf:pdf},
journal = {CLOSER},
keywords = {Affinity,Multi-tenancy,Performance Isolation,Platform,Resource Sharing,SaaS},
pages = {426--431},
title = {{Architectural Concerns in Multi-tenant SaaS Applications.}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84864882112\&partnerID=40\&md5=a71b38428af9f8364a66ee67f8c8b2f1$\backslash$nhttps://sdqweb.ipd.kit.edu/publications/pdfs/KrMoKo2012-multitenant-sass.pdf},
year = {2012}
}

@book{Wilder2012-so,
abstract = {Do you need to learn about cloud computing architecture with Microsoft's Azure quickly? Read this book! It gives you just enough info on the big picture and is filled with key terminology so that you can join the discussion on cloud architecture.},
author = {Wilder, Bill},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wilder - 2012 - Cloud Architecture Patterns.pdf:pdf},
isbn = {9781449319779},
keywords = {Mendeley Import (Oct 22),Mendeley Import (Oct 22)/Masters,architecture,book,books,cloud,direct,download,ebook,ebooks,free,it,lib,library,online,patterns,pdf,read},
mendeley-groups = {Masters},
pages = {182},
publisher = {O'Reilly Media, Inc.},
title = {{Cloud Architecture Patterns}},
url = {http://it-ebooks.info/book/947/},
year = {2012}
}

@book{Homer2014,
abstract = {Abstract Cloud applications have a unique set of characteristics. They run on commodity hardware, provide services to untrusted users, and deal with unpredictable workloads. These factors impose a range of problems that you, as a designer or developer, need to ...},
author = {Homer, Alex and Sharp, John and Brader, Larry and Narumoto, Masashi and Swanson, Trent},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Swanson - Unknown - Cloud Design Patterns.pdf:pdf},
isbn = {1621140369},
mendeley-groups = {Masters},
publisher = {Microsoft patterns \& practices},
title = {{Cloud Design Patterns: Prescriptive Architecture Guidance for Cloud Applications}},
url = {http://dl.acm.org/citation.cfm?id=2636530},
year = {2014}
}

 @article{Hevner2004,
abstract = {Two paradigms characterize much of the research in the Information Systems discipline: behavioral science and design science. The behavioral science paradigm seeks to develop and verify theories that explain or predict human or organizational behavior. The design-science paradigm seeks to extend the boundaries of human and organizational capabilities by creating new and innovative artifacts. Both paradigms are foundational to the IS discipline, positioned as it is at the confluence of people, organizations, and technology. Our objective is to describe the performance of design-science research in Information Systems via a concise conceptual framework and clear guidelines for understanding, executing, and evaluating the research. In the design-science paradigm, knowledge and understanding of a problem domain and its solution are achieved in the building and application of the designed artifact. Three recent exemplars in the research literature are used to demonstrate the application of these guidelines. We conclude with an analysis of the challenges of performing high-quality design-science research in the context of the broader IS community.},
arxivId = {http://dl.acm.org/citation.cfm?id=2017212.2017217},
author = {Hevner, Alan R and March, Salvatore T and Park, Jinsoo and Ram, Sudha and {Alan R. Hevner, Salvatore T. March, Jinsoo Park, Sudha Ram}},
doi = {10.2307/25148625},
eprint = {/dl.acm.org/citation.cfm?id=2017212.2017217},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Hevner et al. - 2004 - Design Science in Information System Research.pdf:pdf},
isbn = {0276-7783},
issn = {02767783},
journal = {MIS Quarterly},
keywords = {Alan R. Hevner,Information Systems research methodologies,Jinsoo Park,S,Salvatore T. March,business environment,creativity,design artifact,design science,experimental methods,search strategies,technology infrastructure},
mendeley-groups = {Masters},
month = mar,
number = {1},
pages = {75--105},
pmid = {12581935},
primaryClass = {http:},
title = {{Design Science in Information System Research}},
url = {http://dblp.uni-trier.de/rec/bibtex/journals/misq/HevnerMPR04 http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.103.1725\&rep=rep1\&type=pdf},
volume = {28},
year = {2004}
}

 @article{March1995a,
abstract = {Research in IT must address the design tasks faced by practitioners. Real problems must be properly conceptualized and represented, appropriate techniques for their solution must be constructed, and solutions must be implemented and evaluated using appropriate criteria. If significant progress is to be made, IT research must also develop an understanding of how and why IT systems work or do not work. Such an understanding must tie together natural laws governing IT systems with natural laws governing the environments in which they operate. This paper presents a two dimensional framework for research in information technology. The first dimension is based on broad types of design and natural science research activities: build, evaluate, theorize, and justify. The second dimension is based on broad types of outputs produced by design research: representational constructs, models, methods, and instantiations. We argue that both design science and natural science activities are needed to insure that IT research is both relevant and effective. ?? 1995 Elsevier Science B.V. All rights reserved.},
author = {March, Salvatore T. and Smith, Gerald F.},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/March, Smith - 1995 - Design and natural science research on information technology.pdf:pdf},
journal = {Decision Support Systems},
keywords = {Design science,Information system research,Information technology,Natural science},
mendeley-groups = {Masters},
number = {4},
pages = {251--266},
pmid = {16104670},
title = {{Design and natural science research on information technology}},
volume = {15},
year = {1995}
}

@article{Walls1992,
abstract = {This paper defines an information system design theory (ISDT) to be a prescriptive theory which integrates normative and descriptive theories into design paths intended to produce more effective information systems. The nature of ISDTs is articulated using Dubin's concept of theory building and Simon's idea of a science of the artificial. An example of an ISDT is presented in the context of Executive Information Systems (EIS). Despite the increasing awareness of the potential of EIS for enhancing executive strategic decision-making effectiveness, there exists little theoretical work which directly guides EIS design. We contend that the underlying theoretical basis of EIS can be addressed through a design theory of vigilant information systems. Vigilance denotes the ability of an information system to help an executive remain alertly watchful for weak signals and discontinuities in the organizational environment relevant to emerging strategic threats and opportunities. Research on managerial information scanning and emerging issue tracking as well as theories of open loop control are synthesized to generate vigilant information system design theory propositions. Transformation of the propositions into testable empirical hypotheses is discussed.},
author = {Walls, Joseph G. and Widmeyer, George R. and {El Sawy}, Omar A.},
journal = {Information Systems Research},
keywords = {Design theory,Executive information systems,Executive scanning,Information system design,Issue management,Open loop control,Vigilance},
mendeley-groups = {Masters},
number = {1},
pages = {36--59},
pmid = {4430789},
title = {{Building an information system design theory for vigilant EIS}},
volume = {3},
year = {1992}
}

@article{Johansson2000,
address = {Hingham, MA, USA},
author = {Johansson, Jesper M},
doi = {10.1023/A:1019121024410},
issn = {1385-951X},
journal = {Inf. Technol. and Management},
keywords = {distributed database systems</KWD>,latency</KWD>,network design</KWD>,network response time</KWD>,parallel processing</KWD></KWDS>},
mendeley-groups = {Masters},
month = jul,
number = {3},
pages = {183--194},
publisher = {Kluwer Academic Publishers},
title = {{On the Impact of Network Latency on Distributed Systems Design}},
url = {http://dx.doi.org/10.1023/A:1019121024410},
volume = {1},
year = {2000}
}

@misc{webopedia,
keywords = {business cloud,cloud,cloud computing,cloud computing definition,cloud explained,cloud storage,define,dictionary,glossary,provider,service,the cloud},
mendeley-groups = {Masters},
mendeley-tags = {cloud computing definition},
title = {{What is Cloud Computing? A Webopedia Definition}},
url = {http://www.webopedia.com/TERM/C/cloud\_computing.html},
urldate = {2014-12-01}
}

 @article{GraceWalker,
annote = {Grace Walker},
author = {Grace, Walker},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Grace - 2012 - Cloud computing fundamentals A different way to deliver computer resources.pdf:pdf},
journal = {IBM Developer Works},
mendeley-groups = {Masters},
title = {{Cloud computing fundamentals: A different way to deliver computer resources}},
url = {http://www.ibm.com/developerworks/cloud/library/cl-cloudintro/cl-cloudintro-pdf.pdf},
year = {2012}
}

@inproceedings{Bezemer:2010:MSA:1862372.1862393,
address = {New York, NY, USA},
author = {Bezemer, Cor-Paul and Zaidman, Andy},
booktitle = {Proceedings of the Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE)},
doi = {10.1145/1862372.1862393},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Bezemer, Zaidman - 2010 - Multi-tenant SaaS Applications Maintenance Dream or Nightmare.pdf:pdf},
isbn = {978-1-4503-0128-2},
pages = {88--92},
publisher = {ACM},
series = {IWPSE-EVOL '10},
title = {{Multi-tenant SaaS Applications: Maintenance Dream or Nightmare?}},
url = {http://doi.acm.org/10.1145/1862372.1862393},
year = {2010}
}

@misc{Chong2006,
abstract = {This provides an overview of the software-as-a-service (SaaS) model for software delivery, provides a high-level description of the architecture of a SaaS application, and discusses the challenges and benefits of developing and offering SaaS. (26 printed pages)},
author = {Chong, Frederick and Carraro, Gianpaolo},
booktitle = {Microsoft Developer Network},
keywords = {Application Architecture,Software-as-a-Service (SaaS)},
mendeley-groups = {Masters},
title = {{Architecture Strategies for Catching the Long Tail}},
url = {http://msdn.microsoft.com/en-us/library/aa479069.aspx},
urldate = {2014-12-01},
year = {2006}
}

@misc{AppINsight,
author = {{Microsoft Corporation}},
booktitle = {MSDN Library, Microsoft Corporation},
mendeley-groups = {Masters},
title = {{Application Insights - Microsoft Azure and Visual Studio Online versions}},
url = {http://msdn.microsoft.com/en-us/library/dn793604.aspx},
urldate = {2014-12-04}
}

@phdthesis{Dodig-crnkovic,
abstract = {This paper analyzes scientific aspects of Computer Science. First it defines science and scientific method in general. It gives a discussion of relations between science, research, development and technology. The existing theory of science (Popper, Carnap, Kuhn, Chalmers) has physics as an ideal. Not many sciences come close to that ideal. Philosophy of Science (Theory of Science) as it is today is not of much help when trying to analyze Computer Science. Computer Science is a new field and its object of investigation (universe) is a computer, which is an ever-developing artifact, the materialization of the ideas that try to structure knowledge and the information about the world, including computers themselves. However different, Computer Science has its basis in logic and mathematics, and both theoretical and experimental research methods follow patterns of classical scientific fields. Computer modeling and simulation as a method is specific for the discipline, and it is going to develop even more in the future, not only applied to computers, but also to other scientific as well as commercial and artistic fields},
author = {Dodig-crnkovic, Gordana},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Dodig-crnkovic - Unknown - Scientific Methods in Computer Science.pdf:pdf},
mendeley-groups = {Masters},
school = {M\"{a}lardalen University},
title = {{Scientific Methods in Computer Science}}
}

@article{Amaral2011,
author = {Amaral, JN},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Amaral - 2011 - About Computing Science Research Methodology.pdf:pdf},
mendeley-groups = {Masters},
title = {{About Computing Science Research Methodology}},
url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.124.702},
year = {2011}
}

@phdthesis{Schell1992-cm,
author = {Schell, Charles},
mendeley-groups = {Masters},
month = jan,
school = {Manchester Business School},
title = {{The Value of the Case Study as a Research Strategy}},
url = {http://www.finance-mba.com/Case Method.pdf},
year = {1992}
}

@book{Microsoft_Patterns_Practices_Team2009-ek,
abstract = {Get the definitive guide on designing applications on the Microsoft application platform\^{a}�''straight from the Microsoft patterns \& practices team. Learn how to choose the most appropriate architecture and the best implementation technologies that the Microsoft application platform offers applications developers. Get critical design recommendations and guidelines organized by application type\^{a}�''from Web, mobile, and rich Internet applications to Office Business Applications. You\^{a}��ll also get links to additional technical resources that can help with your application development.},
author = {{Microsoft Patterns \& Practices Team}},
file = {::},
isbn = {9780735627109},
mendeley-groups = {Masters},
title = {{Microsoft Application Architecture Guide}},
url = {http://books.google.co.za/books/about/Microsoft\_Application\_Architecture\_Guide.html?hl=\&id=qjxqPgAACAAJ},
year = {2009}
}

@article{Monperrus2013,
author = {Monperrus, Martin},
mendeley-groups = {Masters},
month = apr,
title = {{Some Rules for Writing and Using Research Prototypes}},
url = {http://www.monperrus.net/martin/rules-research-prototype},
year = {2013}
}

@misc{BizSpark,
author = {{Microsoft Corporation}},
mendeley-groups = {Masters},
title = {{Microsoft BizSpark: Program Guide for Startups}},
url = {file:///C:/Users/AuronMatrix/Downloads/BizSpark Startup Program Guide.pdf}
}

@book{Evans2003,
abstract = {The software development community widely acknowledges that domain modeling is central to software design. Through domain models, software developers are able to express rich functionality and translate it into a software implementation that truly serves the need of its users. But despite its obvious importance, there are few practical resources that explain how to incorporate effective domain modeling into the software development process. This book fills that need. This is not a book about specific technologies. It offers readers a systematic approach to domain-driven design, presenting an extensive set of design best practices, experience-based techniques, and fundamental principles that facilitate the development of software projects facing complex domains. Intertwining design and development examples based on actual projects to illustrate the application of domain-driven design to real-world software development.},
author = {Evans, Eric},
booktitle = {Folia primatologica international journal of primatology},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Evans - 2003 - Domain-Driven Design Tackling Complexity in the Heart of Software.pdf:pdf},
issn = {00155713},
number = {415},
pages = {560},
pmid = {12566760},
publisher = {Prentice Hall},
title = {{Domain-Driven Design: Tackling Complexity in the Heart of Software}},
url = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0321125215},
volume = {7873},
year = {2003}
}

@misc{Microsoft_Corporation2014-bf,
annote = {Accessed: 2014-11-4},
author = {{Microsoft Corporation}},
booktitle = {Microsoft Developer Network},
howpublished = {$\backslash$url\{http://azure.microsoft.com/en-us/regions/\#overview\}},
mendeley-groups = {Masters},
title = {{Azure: Regions}},
url = {http://azure.microsoft.com/en-us/regions/\#overview},
urldate = {2014-11-4},
year = {2014}
}

@misc{Microsoft_Corporation2014-dn,
annote = {Accessed: 2014-11-4},
author = {{Microsoft Corporation}},
booktitle = {Microsoft Azure},
howpublished = {$\backslash$url\{http://msdn.microsoft.com/en-us/library/azure/jj156085.aspx\}},
mendeley-groups = {Masters},
title = {{About Regional \{VNets\} and Affinity Groups for Virtual Network}},
url = {http://msdn.microsoft.com/en-us/library/azure/jj156085.aspx},
urldate = {2014-11-04},
year = {2014}
}

@book{Sadalage2012-zw,
abstract = {The definitive introduction to NoSQL, the breakthrough performance and scalability solution for cloud-based database applications * *Co-authored by the legendary Martin Fowler: does for NoSQL what he did for UML in his classic UML Distilled *Presents realistic use cases and clear explanations of frequently misunderstood concepts, so developers and architects can make the most of NoSQL *Shows how NoSQL can be integrated with existing infrastructure and used to enable the cloud transition. NoSQL technologies are well-suited for many new applications where traditional RDBMSes often don't perform or scale well - including systems requiring large-scale indexing, serving pages on high-traffic websites, and heavy-duty streaming media delivery. In NoSQL Distilled, renowned software expert Martin Fowler and Thoughtworks database consultant Pramod J. Sadalage demystify NoSQL, succinctly explore the architectural and design issues associated with implementing it, and offer realistic use cases. Modeled after UML Distilled Fowler's international best-seller, NoSQL Distilled, covers all this and more: * *Evaluating which enterprise applications NoSQL is (and isn't) appropriate for. *Understanding the architectural tradeoffs associated with deploying NoSQL. *Comparing leading NoSQL offerings such as MongoDB, CouchDB, Cassandra, Riak, and Neo4J. *Integrating NoSQL with legacy systems. *Managing performance, reliability, availability, and recoverability. *Overcoming widespread misconceptions about NoSQL and its tradeoffs. *Understanding how NoSQL can support the transition to cloud-based systems. *Using NoSQL in agile development environments. *Applying NoSQL in search/retrieval, metadata management, text analysis, social networking, business intelligence, and financial services applications. *Understanding NoSQL query languages, including Object Query MDX, and XQuery and more},
author = {Sadalage, Pramod J and Fowler, Martin},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Distilled - Unknown - No Title.pdf:pdf},
mendeley-groups = {Masters},
publisher = {Pearson Education},
title = {{NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence}},
year = {2012}
}

@misc{Morris,
author = {Morris, Ben},
keywords = {Multi-tenant,Razor,View Engine},
mendeley-tags = {Multi-tenant,Razor,View Engine},
title = {{Multi Tenant Architecture with Asp.net MVC 4 | lonetechie.com}},
url = {http://lonetechie.com/2012/09/25/multi-tenant-architecture-with-asp-net-mvc-4/},
urldate = {2014-12-26},
year = {2012}
}

@book{Alexander1977-ni,
abstract = {You can use this book to design a house for yourself with your family; you can use it to work with your neighbors to improve your town and neighborhood; you can use it to design an office, or a workshop, or a public building. And you can use it to guide you in the actual ...},
author = {Alexander, Christopher and Ishikawa, Sara and Silverstein, Murray},
booktitle = {Structure},
issn = {01950191},
mendeley-groups = {Masters},
pages = {1171},
pmid = {195019199},
publisher = {OUP USA},
series = {Center for Environmental Structure Berkeley, Calif: Center for Environmental Structure series},
title = {{A Pattern Language: Towns, Buildings, Construction}},
url = {http://books.google.co.za/books?id=hwAHmktpk5IC http://books.google.co.za/books?hl=en\&lr=\&id=hwAHmktpk5IC\&oi=fnd\&pg=PR5\&dq=A+Pattern+Language\&ots=lvIpSax10H\&sig=osCx6VECXyB4kI9d5og2r7U8Mb0},
volume = {2},
year = {1977}
}

@article{Brewer2012,
abstract = {The CAP theorem asserts that any networked shared-data system can have only two of three desirable properties. However, by explicitly handling partitions, designers can optimize consistency and availability, thereby achieving some trade-off of all three. The featured Web extra is a podcast from Software Engineering Radio, in which the host interviews Dwight Merriman about the emerging NoSQL movement, the three types of nonrelational data stores, Brewer's CAP theorem, and much more.},
address = {Los Alamitos, CA, USA},
author = {Brewer, Eric},
doi = {http://doi.ieeecomputersociety.org/10.1109/MC.2012.37},
issn = {0018-9162},
journal = {Computer},
number = {2},
pages = {23--29},
publisher = {IEEE Computer Society},
title = {{CAP Twelve Years Later: How the "Rules" Have Changed}},
volume = {45},
year = {2012}
}


@book{Betts2012-ad,
author = {Betts, Dominic and Homer, Alex and Jezierski, Alejandro and Narumoto, Masashi and Zhang, Hanz},
isbn = {9781621140238},
publisher = {Microsoft},
title = {{Developing Multi-tenant Applications for the Cloud on Windows Azure (Microsoft patterns \& practices)}},
url = {http://books.google.co.za/books?id=4dv9mQEACAAJ}
year = {2012}
}

@book{Gamma1994-ho,
abstract = {Capturing a wealth of experience about the design of object-oriented software, four top- notch designers present a catalog of simple and succinct solutions to commonly occurring design problems. Previously undocumented, these 23 patterns allow designers to create ...},
author = {Gamma, E and Helm, R and Johnson, R and Vlissides, J},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Gamma et al. - 1994 - Design Patterns Elements of Reusable \{Object-Oriented\} Software.pdf:pdf},
mendeley-groups = {Masters},
publisher = {Pearson Education},
title = {{Design Patterns: Elements of Reusable \{Object-Oriented\} Software}},
url = {http://books.google.co.za/books?id=6oHuKQe3TjQC},
year = {1994}
}

@article{Wojcik2006,
abstract = {This report revises the Attribute-Driven Design (ADD) method that was developed by the Carnegie Mellon Software Engineering Institute. The motivation for revising ADD came from practitioners who use the method and want ADD to be easier to learn, understand, and apply. The ADD method is an approach to defining a software architecture in which the design process is based on the software quality attribute requirements. ADD follows a recursive process that decom- poses a system or system element by applying architectural tactics and patterns that satisfy its driving quality attribute requirements. This technical report revises the steps of ADD and offers practical guidelines for carrying out each step. In addition, important design decisions that should be considered at each step are provided.},
author = {Wojcik, Rob and Clements, Paul},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wojcik, Clements - 2006 - Attribute-Driven Design ( ADD ), Version 2 . 0.pdf:pdf},
institution = {Software Engineering Institute},
journal = {Design},
number = {November},
pages = {55},
title = {{Attribute-Driven Design ( ADD ), Version 2 . 0}},
url = {http://www.sei.cmu.edu/reports/06tr023.pdf},
year = {2006}
}

@article{Wood2007,
abstract = {This report describes an example application of the Attribute-Driven Design (ADD) method devel- oped by the Carnegie Mellon Software Engineering Institute. The ADD method is an approach to defining a software architecture in which the design process is based on the quality attribute re- quirements the software must fulfill. ADD follows a recursive process that decomposes a system or system element by applying architectural tactics and patterns that satisfy its driving quality attribute requirements. The example in this report shows a practical application of the ADD method to a client-server sys- tem. In particular, this example focuses on selecting patterns to satisfy typical availability require- ments for fault tolerance. The design concerns and patterns presented in this reportas well as the models used to determine whether the architecture satisfies the architectural driverscan be ap- plied in general to include fault tolerance in a system. Most of the reasoning used throughout the de- sign process is pragmatic and models how an experienced architect works.},
author = {Wood, William G},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wood - 2007 - A Practical Example of Applying Attribute-Driven Design ( ADD ), Version 2 . 0.pdf:pdf},
institution = {Software Engineering Institute, Carnegie Mellon University},
journal = {Technology},
number = {February},
pages = {59},
title = {{A Practical Example of Applying Attribute-Driven Design ( ADD ), Version 2 . 0}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:A+Practical+Example+of+Applying+Attribute-Driven+Design+(ADD),+Version+2.0\#0},
volume = {Version 2},
year = {2007}
}

@misc{Microsoft_Corporation2014-gg,
abstract = {Learn when to use Azure Websites, Cloud Services, and Virtual Machines for hosting web applications.},
annote = {Accessed: 2014-10-23},
author = {{Microsoft Corporation}},
booktitle = {Microsoft Azure},
howpublished = {$\backslash$url\{http://azure.microsoft.com/en-us/documentation/articles/choose-web-site-cloud-service-vm/\}},
mendeley-groups = {Masters},
title = {{Azure: Websites, Cloud Services, and Virtual Machines comparison}},
url = {http://azure.microsoft.com/en-us/documentation/articles/choose-web-site-cloud-service-vm/},
urldate = {2014-10-23},
year = {2014}
}


@misc{Microsoft_Corporation_undated-ej,
abstract = {Learn how to develop,,deploy,,and manage applications on Azure,,Microsoft's cloud computing platform for IaaS,,PaaS,,and websites.},
annote = {Accessed: 2014-10-27},
author = {{Microsoft Corporation}},
booktitle = {Microsoft Developer Network},
howpublished = {$\backslash$url\{http://azure.microsoft.com/en-us/documentation/articles/fundamentals-introduction-to-azure/\}},
mendeley-groups = {Masters},
title = {{Azure: Intro to Azure fundamentals}},
url = {http://azure.microsoft.com/en-us/documentation/articles/fundamentals-introduction-to-azure/ },
urldate = {2014-10-27},
year = {2014}
}

@phdthesis{Jelen2011,
abstract = {Abstract This theses focuses on deployment of web applications . Web applications are becoming more important with advances in cloud computing and with the approach of HTML5 standard. With the rise of web applications , the importance of deployment ...},
author = {Jelen, Marek},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Jelen - 2011 - Platform for deploying web applications.pdf:pdf},
keywords = {Mendeley Import (Oct 22),Mendeley Import (Oct 22)/,Mendeley Import (Oct 22)/Masters},
mendeley-groups = {Masters},
publisher = {is.muni.cz},
title = {{Platform for deploying web applications}},
url = {http://is.muni.cz/th/207948/fi\_m/thesis.pdf},
year = {2011}
}

@misc{Rahul2008-vo,
annote = {Accessed: 2014-11-5},
author = {Rahul, Roy},
booktitle = {Roy's Technology Diary},
howpublished = {$\backslash$url\{http://technoroy.blogspot.com/2008/07/shard-database-design.html\}},
mendeley-groups = {Masters},
title = {{Shard - A Database Design}},
url = {http://technoroy.blogspot.com/2008/07/shard-database-design.html},
urldate = {2014-11-05},
year = {2008}
}


@misc{Ries2009-td,
annote = {Accessed: 2014-11-5},
author = {Ries, Eric},
booktitle = {Startup lessons learned},
howpublished = {$\backslash$url\{http://www.startuplessonslearned.com/2009/01/sharding-for-startups.html\}},
mendeley-groups = {Masters},
title = {{Lessons Learned: Sharding for startups}},
url = {http://www.startuplessonslearned.com/2009/01/sharding-for-startups.html},
urldate = {2014-11-05},
year = {2009}
}
@misc{Azure_Redis,
annote = {Accessed: 2014-10-29},
author = {{Microsoft Corporation}},
booktitle = {Microsoft Developer Network},
howpublished = {$\backslash$url\{http://msdn.microsoft.com/en-us/library/dn690523.aspx\}},
mendeley-groups = {Masters},
title = {{Azure: Redis Cache}},
url = {http://msdn.microsoft.com/en-us/library/dn690523.aspx},
urldate = {2014-10-29},
year = {2014}
}

@inproceedings{Bezemer:2010:MSA:1862372.1862393,
address = {New York, NY, USA},
author = {Bezemer, Cor-Paul and Zaidman, Andy},
booktitle = {Proceedings of the Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE)},
doi = {10.1145/1862372.1862393},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Bezemer, Zaidman - 2010 - Multi-tenant SaaS Applications Maintenance Dream or Nightmare.pdf:pdf},
isbn = {978-1-4503-0128-2},
pages = {88--92},
publisher = {ACM},
series = {IWPSE-EVOL '10},
title = {{Multi-tenant SaaS Applications: Maintenance Dream or Nightmare?}},
url = {http://doi.acm.org/10.1145/1862372.1862393},
year = {2010}
}

@misc{AzureLimits,
author = {{Microsoft Corporation}},
booktitle = {Microsoft Azure},
title = {{DocumentDB limits for the preview release}},
url = {http://azure.microsoft.com/en-us/documentation/articles/documentdb-limits/},
urldate = {2014-12-23}
}
