@techreport{InternationalOrganizationOfStandardization2011,
abstract = {ISO/IEC/IEEE 42010:2011 addresses the creation, analysis and sustainment of architectures of systems through the use of architecture descriptions. A conceptual model of architecture description is established. The required contents of an architecture description are specified. Architecture viewpoints, architecture frameworks and architecture description languages are introduced for codifying conventions and common practices of architecture description. The required content of architecture viewpoints, architecture frameworks and architecture description languages is specified. Annexes provide the motivation and background for key concepts and terminology and examples of applying ISO/IEC/IEEE 42010:2011.},
author = {{International Organization Of Standardization}},
booktitle = {ISOIECIEEE 420102011E Revision of ISOIEC 420102007 and IEEE Std 14712000},
doi = {10.1109/IEEESTD.2011.6129467},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/International Organization Of Standardization - 2011 - ISOIECIEEE 420102011 - Systems and software engineering -- Architecture descripti.pdf:pdf},
institution = {International Organization for Standardization (ISO)},
mendeley-groups = {Masters},
number = {March},
pages = {1--46},
title = {{ISO/IEC/IEEE 42010:2011 - Systems and software engineering -- Architecture description}},
url = {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?tp=\&arnumber=6129467\&contentType=Standards\&sortType=asc\_p\_Sequence\&filter=AND(p\_Publication\_Number:6129465)},
volume = {2011},
year = {2011}
}

@inproceedings{Emery2009,
abstract = {The current draft revision of ISO/IEC 42010 (IEEE Std 1471) proposes a formalization of architecture framework within the ontology of the standard. This paper discusses the origin of the concept, motivates its standardization in ISO/IEC 42010, and argues that a well-defined architecture framework should be a key component of any architecture description. The paper describes the application of the proposed construct to several well-known architecture frameworks.},
author = {Emery, David and Hilliard, Rich},
booktitle = {2009 Joint Working IEEE/IFIP Conference on Software Architecture and European Conference on Software Architecture, WICSA/ECSA 2009},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Emery, Hilliard - 2009 - Every architecture description needs a framework Expressing architecture frameworks using ISOIEC 42010.pdf:pdf},
keywords = {Architecture description,Architecture framework,Architecture viewpoint,Model correspondence,Model correspondence rule,Standardization,architecture description,architecture frameworks,model cor-,model correspondence,standardization,viewpoint},
mendeley-groups = {Masters},
pages = {31--40},
title = {{Every architecture description needs a framework: Expressing architecture frameworks using ISO/IEC 42010}},
year = {2009}
}

@misc{42010faq,
keywords = {IEEE 1471,ISO/IEC/IEEE 42010,architecture description,architecture viewpoints,enterprise architecture,multiple views,software architecture,systemsarchitecture},
title = {{ISO/IEC/IEEE 42010: Frequently Asked Questions (FAQ)}},
url = {http://www.iso-architecture.org/ieee-1471/faq.html},
urldate = {17/12/14}
}

@misc{Wiki4plus1,
title = {4+1 architectural view model},
url = {http://en.wikipedia.org/wiki/4+1\_architectural\_view\_model},
urldate = {1 December 2014}
}



@inproceedings{Woods2005,
abstract = {This short document reports the content and results of the "Architecture Description Languages in Practice" working group held on 9th and 10th November 2005 at the WICSA 5 conference, in Pittsburgh, Pennsylvania, USA.},
author = {Woods, Eoin and Hilliard, Rich},
booktitle = {Proceedings - 5th Working IEEE/IFIP Conference on Software Architecture, WICSA 2005},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Woods, Hilliard - 2005 - Architecture description languages in practice session report.pdf:pdf},
pages = {243--246},
title = {{Architecture description languages in practice session report}},
volume = {2005},
year = {2005}
}

@inproceedings{Luckham1996,
abstract = {This paper describes the RAPIDE concepts of system architecture, casual event simulation, and some of the tools for viewing and analysis of causal event simulations. Illustration of the language and tools is given by a detailed small example},
author = {Luckham, David C},
booktitle = {DIMACS Partial Order Methods Workshop IV},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Luckham - 1996 - Rapide A Language and Toolset for Simulation of Distributed Systems by Partial Ordering of Events.pdf:pdf},
keywords = {simulation,software architecture},
title = {{Rapide: A Language and Toolset for Simulation of Distributed Systems by Partial Ordering of Events}},
year = {1996}
}


@phdthesis{Allen1997,
abstract = {Chair-David Garlan},
author = {Allen, Robert J},
booktitle = {Architecture},
doi = {CMU-CS-97-144},
editor = {Lamb, D},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Allen - 1997 - A Formal Approach to Software Architecture.pdf:pdf},
number = {May},
pages = {1--7},
pmid = {6090593003945858192},
publisher = {Carnegie Mellon University},
school = {Carnegie Mellon University},
series = {Lecture Notes in Computer Science},
title = {{A Formal Approach to Software Architecture}},
type = {Doctoral Thesis},
url = {http://portal.acm.org/citation.cfm?id=926062 http://reports-archive.adm.cs.cmu.edu/anon/1997/CMU-CS-97-144.pdf},
volume = {28},
year = {1997}
}

@book{Fowler2004,
abstract = {Now widely adopted as the de facto industry standard and sanctioned by the Object Management Group, the Unified Modeling Language (UML) is a notation all software developers need to know and understand. However, the UML is a big language, and not all of it is equally important. The award-winning first edition of UML Distilled was widely praised for being a concise guide to the core parts of the UML and has proved extremely successful in helping developers get up and running quickly. UML Distilled, Second Edition, maintains the concise format with significantly updated coverage of use cases and activity diagrams, and expanded coverage of collaborations. It also includes a new appendix detailing the changes between UML versions.Written for those with a basic understanding of object-oriented analysis and design, this book begins with a summary of UML's history, development, and rationale and then moves into a discussion of how the UML can be integrated into the object-oriented development process. The primary author profiles the various modeling techniques in the UML--such as use cases, class diagrams, and interaction diagrams--and describes the notation and semantics clearly and succinctly. He also outlines useful non-UML techniques such as CRC cards and patterns. These descriptions are made even more relevant with a collection of best practices based on the primary author's experience and a brief Java programming example demonstrating the implementation of a UML-based design. With this tour of the key parts of the UML, readers will be left with a firm foundation upon which to build models and develop further knowledge of the Unified Modeling Language.Praise for the First Edition"UML Distilled is a recipient of the prestigious 1997 Software Development Magazine Productivity Award in the Books category. Addison-Wesley congratulates authors Martin Fowler and Kendall Scott for their outstanding work.""UML Distilled is well written, knowledgeable about both systems development and UML, and disarmingly honest." -- Robert L. Glass, The Software Practitioner (March 1998)"UML Distilled proves that you can say a lot of useful things about computing in a small book." -- Gregory V. Wilson, Dr. Dobb's Journal 020165783XB04062001},
author = {Fowler, Martin and Scott, Kendall},
booktitle = {Pearson Paravia Bruno Mondad},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Fowler, Scott - 2004 - UML Distilled A Brief Guide to the Standard Object Modeling Language.pdf:pdf},
isbn = {0201895358},
mendeley-groups = {Masters},
pages = {175},
pmid = {13268755},
publisher = {Addison-Wesley Professional},
title = {{UML Distilled: A Brief Guide to the Standard Object Modeling Language}},
url = {http://portal.acm.org/citation.cfm?id=327721},
year = {2004}
}


@phdthesis{bjorn,
abstract = {An Architecture Description Language (ADL) is a language designed to model a system. They have often graphical as well as plain text syntax. This paper starts with a brief description of ADLs, and then follows an overview of the popular ADLs on the market of today and conferences about ADLs. Finally, a connection to my own research is described.},
author = {Bj\"{o}rnander, Stefan},
booktitle = {mrtc.mdh.se},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Bj\"{o}rnander - Unknown - Architecture Description Languages.pdf:pdf},
school = {M\"{a}lardalen University},
title = {{Architecture Description Languages}},
url = {http://www.mrtc.mdh.se/~han/FoPlan/ass2-bjornander.pdf}
}

@article{Kruchten,
abstract = {This article presents a model for describing the architecture of software-intensive systems, based on the use of multiple, concurrent views. This use of multiple views allows to address separately the concerns of the various ‘stakeholders’ of the architecture: end-user, developers, systems engineers, project managers, etc., and to handle separately the functional and non functional requirements. Each of the five views is described, together with a notation to capture it. The views are designed using an architecture-centered, scenario- driven, iterative development process.},
author = {Kruchten, Philippe},
doi = {10.1145/216591.216611},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Kruchten - 1995 - Architectural Blueprints — The "4+1 " View Model of Software Architecture.pdf:pdf},
isbn = {0897917057},
issn = {07407459},
journal = {IEEE Software},
keywords = {object-oriented design,software architecture,software development process,view},
number = {November},
pages = {42--50},
pmid = {3651256673990163555},
title = {{Architectural blueprints - The "4+ 1" view model of software architecture}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:Architectural+Blueprints+?+The+?+4+++1+?+View+Model+of+Software+Architecture\#0},
volume = {12},
year = {1995}
}

@article{Muchandi2007,
author = {Muchandi, V},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Paper - Unknown - Applying 4 1 View Architecture with UML 2.pdf:pdf},
journal = {FCGSS White Paper},
title = {{Applying 4+ 1 view architecture with UML 2}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:Applying+4+++1+View+Architecture+with+UML+2\#5},
year = {2007}
}

@article{Krebs2012,
abstract = {Multi-tenant applications serve different customers with one application instance. This architectural style leverages sharing and economies of scale to provide cost efficient hosting. As multi-tenancy is a new concept, a common definition of the word and related concepts is not yet established and the architectural concerns are not fully understood. This paper provides an overview of important architectural concerns and there mutual influences. Beside that, it defines multi-tenancy and differentiates it from several related concepts.},
author = {Krebs, Rouven and Momm, Christof and Kounev, Samuel},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Krebs, Momm, Kounev - 2012 - Architectural Concerns in Multi-tenant SaaS Applications.pdf:pdf},
journal = {CLOSER},
keywords = {Affinity,Multi-tenancy,Performance Isolation,Platform,Resource Sharing,SaaS},
pages = {426--431},
title = {{Architectural Concerns in Multi-tenant SaaS Applications.}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84864882112\&partnerID=40\&md5=a71b38428af9f8364a66ee67f8c8b2f1$\backslash$nhttps://sdqweb.ipd.kit.edu/publications/pdfs/KrMoKo2012-multitenant-sass.pdf},
year = {2012}
}

@book{Wilder2012-so,
abstract = {Do you need to learn about cloud computing architecture with Microsoft's Azure quickly? Read this book! It gives you just enough info on the big picture and is filled with key terminology so that you can join the discussion on cloud architecture.},
author = {Wilder, Bill},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wilder - 2012 - Cloud Architecture Patterns.pdf:pdf},
isbn = {9781449319779},
keywords = {Mendeley Import (Oct 22),Mendeley Import (Oct 22)/Masters,architecture,book,books,cloud,direct,download,ebook,ebooks,free,it,lib,library,online,patterns,pdf,read},
mendeley-groups = {Masters},
pages = {182},
publisher = {O'Reilly Media, Inc.},
title = {{Cloud Architecture Patterns}},
url = {http://it-ebooks.info/book/947/},
year = {2012}
}

@book{Homer2014,
abstract = {Abstract Cloud applications have a unique set of characteristics. They run on commodity hardware, provide services to untrusted users, and deal with unpredictable workloads. These factors impose a range of problems that you, as a designer or developer, need to ...},
author = {Homer, Alex and Sharp, John and Brader, Larry and Narumoto, Masashi and Swanson, Trent},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Swanson - Unknown - Cloud Design Patterns.pdf:pdf},
isbn = {1621140369},
mendeley-groups = {Masters},
publisher = {Microsoft patterns \& practices},
title = {{Cloud Design Patterns: Prescriptive Architecture Guidance for Cloud Applications}},
url = {http://dl.acm.org/citation.cfm?id=2636530},
year = {2014}
}

 @article{Hevner2004,
abstract = {Two paradigms characterize much of the research in the Information Systems discipline: behavioral science and design science. The behavioral science paradigm seeks to develop and verify theories that explain or predict human or organizational behavior. The design-science paradigm seeks to extend the boundaries of human and organizational capabilities by creating new and innovative artifacts. Both paradigms are foundational to the IS discipline, positioned as it is at the confluence of people, organizations, and technology. Our objective is to describe the performance of design-science research in Information Systems via a concise conceptual framework and clear guidelines for understanding, executing, and evaluating the research. In the design-science paradigm, knowledge and understanding of a problem domain and its solution are achieved in the building and application of the designed artifact. Three recent exemplars in the research literature are used to demonstrate the application of these guidelines. We conclude with an analysis of the challenges of performing high-quality design-science research in the context of the broader IS community.},
arxivId = {http://dl.acm.org/citation.cfm?id=2017212.2017217},
author = {Hevner, Alan R and March, Salvatore T and Park, Jinsoo and Ram, Sudha and {Alan R. Hevner, Salvatore T. March, Jinsoo Park, Sudha Ram}},
doi = {10.2307/25148625},
eprint = {/dl.acm.org/citation.cfm?id=2017212.2017217},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Hevner et al. - 2004 - Design Science in Information System Research.pdf:pdf},
isbn = {0276-7783},
issn = {02767783},
journal = {MIS Quarterly},
keywords = {Alan R. Hevner,Information Systems research methodologies,Jinsoo Park,S,Salvatore T. March,business environment,creativity,design artifact,design science,experimental methods,search strategies,technology infrastructure},
mendeley-groups = {Masters},
month = mar,
number = {1},
pages = {75--105},
pmid = {12581935},
primaryClass = {http:},
title = {{Design Science in Information System Research}},
url = {http://dblp.uni-trier.de/rec/bibtex/journals/misq/HevnerMPR04 http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.103.1725\&rep=rep1\&type=pdf},
volume = {28},
year = {2004}
}

 @article{March1995a,
abstract = {Research in IT must address the design tasks faced by practitioners. Real problems must be properly conceptualized and represented, appropriate techniques for their solution must be constructed, and solutions must be implemented and evaluated using appropriate criteria. If significant progress is to be made, IT research must also develop an understanding of how and why IT systems work or do not work. Such an understanding must tie together natural laws governing IT systems with natural laws governing the environments in which they operate. This paper presents a two dimensional framework for research in information technology. The first dimension is based on broad types of design and natural science research activities: build, evaluate, theorize, and justify. The second dimension is based on broad types of outputs produced by design research: representational constructs, models, methods, and instantiations. We argue that both design science and natural science activities are needed to insure that IT research is both relevant and effective. ?? 1995 Elsevier Science B.V. All rights reserved.},
author = {March, Salvatore T. and Smith, Gerald F.},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/March, Smith - 1995 - Design and natural science research on information technology.pdf:pdf},
journal = {Decision Support Systems},
keywords = {Design science,Information system research,Information technology,Natural science},
mendeley-groups = {Masters},
number = {4},
pages = {251--266},
pmid = {16104670},
title = {{Design and natural science research on information technology}},
volume = {15},
year = {1995}
}

@article{Walls1992,
abstract = {This paper defines an information system design theory (ISDT) to be a prescriptive theory which integrates normative and descriptive theories into design paths intended to produce more effective information systems. The nature of ISDTs is articulated using Dubin's concept of theory building and Simon's idea of a science of the artificial. An example of an ISDT is presented in the context of Executive Information Systems (EIS). Despite the increasing awareness of the potential of EIS for enhancing executive strategic decision-making effectiveness, there exists little theoretical work which directly guides EIS design. We contend that the underlying theoretical basis of EIS can be addressed through a design theory of vigilant information systems. Vigilance denotes the ability of an information system to help an executive remain alertly watchful for weak signals and discontinuities in the organizational environment relevant to emerging strategic threats and opportunities. Research on managerial information scanning and emerging issue tracking as well as theories of open loop control are synthesized to generate vigilant information system design theory propositions. Transformation of the propositions into testable empirical hypotheses is discussed.},
author = {Walls, Joseph G. and Widmeyer, George R. and {El Sawy}, Omar A.},
journal = {Information Systems Research},
keywords = {Design theory,Executive information systems,Executive scanning,Information system design,Issue management,Open loop control,Vigilance},
mendeley-groups = {Masters},
number = {1},
pages = {36--59},
pmid = {4430789},
title = {{Building an information system design theory for vigilant EIS}},
volume = {3},
year = {1992}
}

@article{Johansson2000,
address = {Hingham, MA, USA},
author = {Johansson, Jesper M},
doi = {10.1023/A:1019121024410},
issn = {1385-951X},
journal = {Inf. Technol. and Management},
keywords = {distributed database systems</KWD>,latency</KWD>,network design</KWD>,network response time</KWD>,parallel processing</KWD></KWDS>},
mendeley-groups = {Masters},
month = jul,
number = {3},
pages = {183--194},
publisher = {Kluwer Academic Publishers},
title = {{On the Impact of Network Latency on Distributed Systems Design}},
url = {http://dx.doi.org/10.1023/A:1019121024410},
volume = {1},
year = {2000}
}

@misc{webopedia,
keywords = {business cloud,cloud,cloud computing,cloud computing definition,cloud explained,cloud storage,define,dictionary,glossary,provider,service,the cloud},
mendeley-groups = {Masters},
mendeley-tags = {cloud computing definition},
title = {{What is Cloud Computing? A Webopedia Definition}},
url = {http://www.webopedia.com/TERM/C/cloud\_computing.html},
urldate = {01/12/14}
}

 @article{GraceWalker,
annote = {Grace Walker},
author = {Grace, Walker},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Grace - 2012 - Cloud computing fundamentals A different way to deliver computer resources.pdf:pdf},
journal = {IBM Developer Works},
mendeley-groups = {Masters},
title = {{Cloud computing fundamentals: A different way to deliver computer resources}},
url = {http://www.ibm.com/developerworks/cloud/library/cl-cloudintro/cl-cloudintro-pdf.pdf},
year = {2012}
}

@inproceedings{Bezemer:2010:MSA:1862372.1862393,
address = {New York, NY, USA},
author = {Bezemer, Cor-Paul and Zaidman, Andy},
booktitle = {Proceedings of the Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE)},
doi = {10.1145/1862372.1862393},
file = {:C$\backslash$:/Users/Dolphin/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Bezemer, Zaidman - 2010 - Multi-tenant SaaS Applications Maintenance Dream or Nightmare.pdf:pdf},
isbn = {978-1-4503-0128-2},
pages = {88--92},
publisher = {ACM},
series = {IWPSE-EVOL '10},
title = {{Multi-tenant SaaS Applications: Maintenance Dream or Nightmare?}},
url = {http://doi.acm.org/10.1145/1862372.1862393},
year = {2010}
}
